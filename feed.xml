<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://sahat.me</link>
    <atom:link href="http://sahat.me/feed.xml" rel="self" type="application/rss+xml" />
    <description></description>
    <language>en-us</language>
    <pubDate>Sat, 09 Nov 2013 20:05:48 +0000</pubDate>
    <lastBuildDate>Sat, 09 Nov 2013 20:05:48 +0000</lastBuildDate>

    
    
    <item>
      <title>Require.js Library Skeleton</title>
      <link>http://sahat.me/2013/11/08/requirejs-library-skeleton/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/requirejs-library-skeleton</guid>
      <description>&lt;p&gt;&lt;a href=&#39;https://rawgithub.com/sahat/requirejs-library/master/demo/inline.html&#39;&gt;Demo&lt;/a&gt; - &lt;a href=&#39;http://github.com/sahat/requirejs-library/&#39;&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Featured in JavaScript Weekly - Issue 155!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Skeleton project for building javascript libraries using Require.js module loader. Comes with Jasmine testing framework, Karma test runner and Grunt task runner.&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;Require.js, Grunt.js, Jasmine, Karma, Bower&lt;/strong&gt;&lt;/p&gt;
&lt;iframe allowtransparency=&#39;true&#39; frameborder=&#39;0&#39; height=&#39;30&#39; scrolling=&#39;0&#39; src=&#39;http://ghbtns.com/github-btn.html?wmode=opaque&amp;amp;user=sahat&amp;amp;repo=requirejs-library&amp;amp;type=watch&amp;amp;count=true&amp;amp;size=large&#39; width=&#39;170&#39;&gt;
&lt;/iframe&gt;</description>
    </item>
    
    
    
    <item>
      <title>Opheliac HTML5 Lyrics</title>
      <link>http://sahat.me/2013/11/08/opheliac/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/opheliac</guid>
      <description>&lt;p&gt;&lt;a href=&#39;http://seniorproject.herokuapp.com/&#39;&gt;Demo&lt;/a&gt; - &lt;a href=&#39;https://github.com/sahat/audiostreamer/&#39;&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YouTube has plenty of &amp;#8220;lyrics music videos&amp;#8221;. I thought it would be interesting to create something similar using CSS and JavaScript. This is a song &lt;strong&gt;Opheliac&lt;/strong&gt; by &lt;strong&gt;Emilie Autumn&lt;/strong&gt;, where lyrics are perfectly synchronized with the music. Lyrics start after 57 seconds.&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;jQuery&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#39;full&#39;&gt;&lt;img src=&#39;/images/projects/opheliac.png&#39; /&gt;&lt;/div&gt;</description>
    </item>
    
    
    
    <item>
      <title>New Eden Faces</title>
      <link>http://sahat.me/2013/11/08/newedenfaces/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/newedenfaces</guid>
      <description>&lt;p&gt;&lt;a href=&#39;http://newedenfaces.com/&#39;&gt;Demo&lt;/a&gt; - &lt;a href=&#39;https://github.com/sahat/newedenfaces/&#39;&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;New Eden Faces&lt;/em&gt; lets you vote between two randomly selected EVE Online characters of the same gender. The goal? To see, who are the best looking characters of EVE Online, of course!&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;Node.js, Backbone.js, MongoDB, jQuery&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#39;full&#39;&gt;&lt;img src=&#39;/images/projects/new-eden-faces.png&#39; /&gt;&lt;/div&gt;</description>
    </item>
    
    
    
    <item>
      <title>Allison Eckfeldt's Website</title>
      <link>http://sahat.me/2013/11/08/kazlovesbats/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/kazlovesbats</guid>
      <description>&lt;p&gt;&lt;a href=&#39;http://kazlovesbats.com/&#39;&gt;Demo&lt;/a&gt; - Source Code (Private)&lt;/p&gt;

&lt;p&gt;Allison Eckfeldt&amp;#8217;s personal website. Content aggregation is done with YouTube, Instagram and Tumblr APIs on client-side via JSONP.&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;jQuery, Underscore&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#39;full&#39;&gt;&lt;img src=&#39;/images/projects/kazlovesbats.png&#39; /&gt;&lt;/div&gt;</description>
    </item>
    
    
    
    <item>
      <title>Shopbook</title>
      <link>http://sahat.me/2013/11/08/dressedtocode/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/dressedtocode</guid>
      <description>&lt;p&gt;Demo (Local) - &lt;a href=&#39;http://github.com/sahat/dressedtocode/&#39;&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Shopbook is as responsive web app that allows people to create a contact list of family and friend, their sizes, favorite brands, occasions/birthdays and wish lists. Users import contacts from Facebook or add contacts on their own.&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;Node.js, Facebook SDK&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#39;full&#39;&gt;&lt;img src=&#39;/images/projects/shopbook.png&#39; /&gt;&lt;/div&gt;</description>
    </item>
    
    
    
    <item>
      <title>CL4P-TP</title>
      <link>http://sahat.me/2013/11/08/csc322/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/csc322</guid>
      <description>&lt;p&gt;&lt;a href=&#39;http://csc322.herokuapp.com/&#39;&gt;Demo&lt;/a&gt; - &lt;a href=&#39;https://github.com/sahat/csc322/&#39;&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final project for Software Engineering course at the &lt;strong&gt;City College of New York&lt;/strong&gt;. Some features include: personalized game recommendations based on the rating / purchase patterns of &lt;em&gt;similar users&lt;/em&gt;, profile with XBOX 360 achievements, rating system, custom signup and login components, custom comments system, store purchases, YouTube trailer previews, and more!&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;Node.js, Redis, MongoDB, jQuery&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#39;full&#39;&gt;&lt;img src=&#39;/images/projects/csc322.png&#39; /&gt;&lt;/div&gt;</description>
    </item>
    
    
    
    <item>
      <title>Conor Mccreedy's Website</title>
      <link>http://sahat.me/2013/11/08/connor-mccreedy/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/connor-mccreedy</guid>
      <description>&lt;p&gt;Conor Mccreedy is an internationally known South African artist. Written in CodeIgniter PHP Web Framework. I no longer maintain the website. Designed in collaboration with Andrea Messier Cuomo.&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;PHP, jQuery, CSS&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    
    
    <item>
      <title>CloudBucket</title>
      <link>http://sahat.me/2013/11/08/cloudbucket/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/cloudbucket</guid>
      <description>&lt;p&gt;&lt;a href=&#39;http://cloudbucket-sahat.rhcloud.com/&#39;&gt;Demo&lt;/a&gt; - &lt;a href=&#39;http://github.com/sahat/cloudbucket/&#39;&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CloudBucket is the online cloud storage system with a semantic search capability. Whenever you upload a file to CloudBucket, it is tagged automatically based on its file contents. For instance, a music file will receive a covert art, lyrics, artist information, similar artists and last.fm tags that describe that particular song. You can then, for example, search for a keyword that is contained in the lyrics of that song and it will return this file in the search results. Typical search systems return results that match a keyword in the filename only, not based on its file contents.&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;Node.js, Python, MongoDB, AWS, jQuery, Grunt.js, Bower, Google OAuth 2.0, Google Books API, SkyBiometry API, Last.fm API, Musixmatch API&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#39;full&#39;&gt;&lt;img src=&#39;/images/projects/cloudbucket.png&#39; /&gt;&lt;/div&gt;</description>
    </item>
    
    
    
    <item>
      <title>Audiostreamer</title>
      <link>http://sahat.me/2013/11/08/audiostreamer/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/audiostreamer</guid>
      <description>&lt;p&gt;&lt;a href=&#39;http://seniorproject.herokuapp.com/&#39;&gt;Demo&lt;/a&gt; - &lt;a href=&#39;https://github.com/sahat/audiostreamer/&#39;&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Real-time synchronized audio playback across multiple connected web browser clients. This allows you to boost the sound by playing the song on more than one device simultaneously.&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;Node.js, Socket.io&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#39;full&#39;&gt;&lt;img src=&#39;/images/projects/audiostreamer.png&#39; /&gt;&lt;/div&gt;</description>
    </item>
    
    
    
    <item>
      <title>Apparelist</title>
      <link>http://sahat.me/2013/11/08/apparelist/</link>
      <pubDate>Fri, 08 Nov 2013 00:00:00 +0000</pubDate>
      <author></author>
      <guid>http://sahat.me/2013/11/08/apparelist</guid>
      <description>&lt;p&gt;&lt;a href=&#39;http://apparelist.co/&#39;&gt;Demo&lt;/a&gt; - &lt;a href=&#39;https://github.com/sahat/apparelist/&#39;&gt;Source Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Browse and compare items from multiple clothing stores, e.g. Macys, Express, H&amp;amp;M, UNIQLO.&lt;/p&gt;

&lt;p&gt;Technology Stack: &lt;strong&gt;Node.js, MongoDB&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#39;full&#39;&gt;&lt;img src=&#39;/images/projects/apparelist.png&#39; /&gt;&lt;/div&gt;</description>
    </item>
    
    

  </channel> 
</rss>